/**
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of RequestBody
 *
 * @constructor
 */
angular.module('UberAPILib')
    .factory('RequestBody', ['BaseModel',
        function (BaseModel) {
            var RequestBody = function (obj) {
                if (!obj) {
                    this.endLatitude = null;
                    this.endLongitude = null;
                    this.productId = null;
                    this.startLatitude = null;
                    this.startLongitude = null;
                    this.surgeConfirmationId = null;
        
                    // Append to variable dictionary
                    this._variableDict['endLatitude'] = 'end_latitude';
                    this._variableDict['endLongitude'] = 'end_longitude';
                    this._variableDict['productId'] = 'product_id';
                    this._variableDict['startLatitude'] = 'start_latitude';
                    this._variableDict['startLongitude'] = 'start_longitude';
                    this._variableDict['surgeConfirmationId'] = 'surge_confirmation_id';
                } else {
                    this.endLatitude = obj.end_latitude;
                    this.endLongitude = obj.end_longitude;
                    this.productId = obj.product_id;
                    this.startLatitude = obj.start_latitude;
                    this.startLongitude = obj.start_longitude;
                    this.surgeConfirmationId = obj.surge_confirmation_id;
            
                    // Append to variable dictionary
                    this._variableDict['endLatitude'] = 'end_latitude';
                    this._variableDict['endLongitude'] = 'end_longitude';
                    this._variableDict['productId'] = 'product_id';
                    this._variableDict['startLatitude'] = 'start_latitude';
                    this._variableDict['startLongitude'] = 'start_longitude';
                    this._variableDict['surgeConfirmationId'] = 'surge_confirmation_id';
                }
            }
    
            RequestBody.prototype = new BaseModel();
            RequestBody.prototype.constructor = RequestBody;
        
            /**
             * The final or destination latitude.
             *
             * @return {double}
             */
            RequestBody.prototype.getEndLatitude = function () {
                return this.endLatitude;
            };
        
            /**
             * Setter for EndLatitude
             * 
             * @param {double} value 
             */
            RequestBody.prototype.setEndLatitude = function (value) {
                this.endLatitude = value;
            };
        
            /**
             * The final or destination longitude.
             *
             * @return {double}
             */
            RequestBody.prototype.getEndLongitude = function () {
                return this.endLongitude;
            };
        
            /**
             * Setter for EndLongitude
             * 
             * @param {double} value 
             */
            RequestBody.prototype.setEndLongitude = function (value) {
                this.endLongitude = value;
            };
        
            /**
             * The unique ID of the product being requested.
             *
             * @return {string}
             */
            RequestBody.prototype.getProductId = function () {
                return this.productId;
            };
        
            /**
             * Setter for ProductId
             * 
             * @param {string} value 
             */
            RequestBody.prototype.setProductId = function (value) {
                this.productId = value;
            };
        
            /**
             * The beginning or "pickup" latitude.
             *
             * @return {double}
             */
            RequestBody.prototype.getStartLatitude = function () {
                return this.startLatitude;
            };
        
            /**
             * Setter for StartLatitude
             * 
             * @param {double} value 
             */
            RequestBody.prototype.setStartLatitude = function (value) {
                this.startLatitude = value;
            };
        
            /**
             * The beginning or "pickup" longitude.
             *
             * @return {double}
             */
            RequestBody.prototype.getStartLongitude = function () {
                return this.startLongitude;
            };
        
            /**
             * Setter for StartLongitude
             * 
             * @param {double} value 
             */
            RequestBody.prototype.setStartLongitude = function (value) {
                this.startLongitude = value;
            };
        
            /**
             * The unique identifier of the surge session for a user. Required when returned from a 409 Conflict response on previous POST attempt.
             *
             * @return {string}
             */
            RequestBody.prototype.getSurgeConfirmationId = function () {
                return this.surgeConfirmationId;
            };
        
            /**
             * Setter for SurgeConfirmationId
             * 
             * @param {string} value 
             */
            RequestBody.prototype.setSurgeConfirmationId = function (value) {
                this.surgeConfirmationId = value;
            };
        
            return RequestBody;
        }
    ]);

}(angular));
