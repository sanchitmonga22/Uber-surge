/**
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of History
 *
 * @constructor
 */
angular.module('UberAPILib')
    .factory('History', ['BaseModel', 'Location',
        function (BaseModel, Location) {
            var History = function (obj) {
                if (!obj) {
                    this.distance = null;
                    this.endLocation = null;
                    this.endTime = null;
                    this.productId = null;
                    this.requestTime = null;
                    this.startLocation = null;
                    this.startTime = null;
                    this.status = null;
                    this.uuid = null;
        
                    // Append to variable dictionary
                    this._variableDict['endLocation'] = 'end_location';
                    this._variableDict['endTime'] = 'end_time';
                    this._variableDict['productId'] = 'product_id';
                    this._variableDict['requestTime'] = 'request_time';
                    this._variableDict['startLocation'] = 'start_location';
                    this._variableDict['startTime'] = 'start_time';
                } else {
                    this.distance = obj.distance;
                    this.endLocation = new Location(obj.end_location);
                    this.endTime = obj.end_time;
                    this.productId = obj.product_id;
                    this.requestTime = obj.request_time;
                    this.startLocation = new Location(obj.start_location);
                    this.startTime = obj.start_time;
                    this.status = obj.status;
                    this.uuid = obj.uuid;
            
                    // Append to variable dictionary
                    this._variableDict['endLocation'] = 'end_location';
                    this._variableDict['endTime'] = 'end_time';
                    this._variableDict['productId'] = 'product_id';
                    this._variableDict['requestTime'] = 'request_time';
                    this._variableDict['startLocation'] = 'start_location';
                    this._variableDict['startTime'] = 'start_time';
                }
            }
    
            History.prototype = new BaseModel();
            History.prototype.constructor = History;
        
            /**
             * Distance travelled
             *
             * @return {double}
             */
            History.prototype.getDistance = function () {
                return this.distance;
            };
        
            /**
             * Setter for Distance
             * 
             * @param {double} value 
             */
            History.prototype.setDistance = function (value) {
                this.distance = value;
            };
        
            /**
             * Location where journey ended
             *
             * @return {Location}
             */
            History.prototype.getEndLocation = function () {
                return this.endLocation;
            };
        
            /**
             * Setter for EndLocation
             * 
             * @param {Location} value 
             */
            History.prototype.setEndLocation = function (value) {
                this.endLocation = value;
            };
        
            /**
             * Time of journey end
             *
             * @return {int}
             */
            History.prototype.getEndTime = function () {
                return this.endTime;
            };
        
            /**
             * Setter for EndTime
             * 
             * @param {int} value 
             */
            History.prototype.setEndTime = function (value) {
                this.endTime = value;
            };
        
            /**
             * The product that was used
             *
             * @return {string}
             */
            History.prototype.getProductId = function () {
                return this.productId;
            };
        
            /**
             * Setter for ProductId
             * 
             * @param {string} value 
             */
            History.prototype.setProductId = function (value) {
                this.productId = value;
            };
        
            /**
             * Time when requested
             *
             * @return {int}
             */
            History.prototype.getRequestTime = function () {
                return this.requestTime;
            };
        
            /**
             * Setter for RequestTime
             * 
             * @param {int} value 
             */
            History.prototype.setRequestTime = function (value) {
                this.requestTime = value;
            };
        
            /**
             * Location of starting the journey
             *
             * @return {Location}
             */
            History.prototype.getStartLocation = function () {
                return this.startLocation;
            };
        
            /**
             * Setter for StartLocation
             * 
             * @param {Location} value 
             */
            History.prototype.setStartLocation = function (value) {
                this.startLocation = value;
            };
        
            /**
             * Time of starting the journey
             *
             * @return {int}
             */
            History.prototype.getStartTime = function () {
                return this.startTime;
            };
        
            /**
             * Setter for StartTime
             * 
             * @param {int} value 
             */
            History.prototype.setStartTime = function (value) {
                this.startTime = value;
            };
        
            /**
             * Status of the product e.g., completed
             *
             * @return {string}
             */
            History.prototype.getStatus = function () {
                return this.status;
            };
        
            /**
             * Setter for Status
             * 
             * @param {string} value 
             */
            History.prototype.setStatus = function (value) {
                this.status = value;
            };
        
            /**
             * History item id
             *
             * @return {string}
             */
            History.prototype.getUuid = function () {
                return this.uuid;
            };
        
            /**
             * Setter for Uuid
             * 
             * @param {string} value 
             */
            History.prototype.setUuid = function (value) {
                this.uuid = value;
            };
        
            return History;
        }
    ]);

}(angular));
