/**
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Vehicle
 *
 * @constructor
 */
angular.module('UberAPILib')
    .factory('Vehicle', ['BaseModel',
        function (BaseModel) {
            var Vehicle = function (obj) {
                if (!obj) {
                    this.licensePlate = null;
                    this.make = null;
                    this.model = null;
        
                    // Append to variable dictionary
                    this._variableDict['licensePlate'] = 'license_plate';
                } else {
                    this.licensePlate = obj.license_plate;
                    this.make = obj.make;
                    this.model = obj.model;
            
                    // Append to variable dictionary
                    this._variableDict['licensePlate'] = 'license_plate';
                }
            }
    
            Vehicle.prototype = new BaseModel();
            Vehicle.prototype.constructor = Vehicle;
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            Vehicle.prototype.getLicensePlate = function () {
                return this.licensePlate;
            };
        
            /**
             * Setter for LicensePlate
             * 
             * @param {string} value 
             */
            Vehicle.prototype.setLicensePlate = function (value) {
                this.licensePlate = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            Vehicle.prototype.getMake = function () {
                return this.make;
            };
        
            /**
             * Setter for Make
             * 
             * @param {string} value 
             */
            Vehicle.prototype.setMake = function (value) {
                this.make = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {string}
             */
            Vehicle.prototype.getModel = function () {
                return this.model;
            };
        
            /**
             * Setter for Model
             * 
             * @param {string} value 
             */
            Vehicle.prototype.setModel = function (value) {
                this.model = value;
            };
        
            return Vehicle;
        }
    ]);

}(angular));
